server {
	listen 127.0.0.1:8080;
	server_name example.com;
	root app/website/;
	client_max_body_size 5M;

	# Setup some specific error pages
	# 		other errors just send a simple HTTP response with Error Code and displaya string describing the error
	error_page 400 /static/error_pages/400BadRequest.html;
	error_page 401 /static/error_pages/401Unauthorized.html;
	error_page 403 /static/error_pages/403Forbidden.html;
	error_page 404 /static/error_pages/404NotFound.html;
	error_page 405 /static/error_pages/405MethodNotAllowed.html;
	error_page 408 /static/error_pages/408RequestTimeout.html;
	error_page 413 /static/error_pages/413RequestEntityTooLarge.html;
	error_page 500 /static/error_pages/500InternalServerError.html;
	error_page 501 /static/error_pages/501NotImplemented.html;
	error_page 502 /static/error_pages/502BadGateway.html;
	error_page 504 /static/error_pages/504GatewayTimeout.html;
	error_page 505 /static/error_pages/505HTTPVersionNotSupported.html;

	location / {
		root app/website/;
		index static/index.html;
		limit_except GET;
	}

	location /cgi-bin/ {
		# Forms have to contain less than 50 bytes of data in their body
		client_max_body_size 200;
		# We want to hide the CGI Files from the user
		autoindex off; 
		# Allow CGI FILE exec
		cgi on;
        # CGI file extension allowed (only python files)
		cgi_pass .py;
		# GET = CGI args contained in the query string / POST = CGI args contained in HTTP body
		limit_except GET POST; 
	}

	#You will be able to see each image individually or to see an autoindex 
	#You can try to delete, but it will be impossible since the only method allowed is GET
	location /images/ {
		autoindex on;
		limit_except GET;
	}

	#You will be able to see each image individually or to see an autoindex 
	#You can try to delete, it will work 
	location /uploads/ {
		# Files uploaded have to contain less than 1 MegaByte of data in their body
		client_max_body_size 1M;
		# Upload is enabled in this directory
		upload_enable on;
		# Uploaded files gonna end up here
        upload_store app/website/uploads/;
		autoindex on;
		limit_except GET POST DELETE;
	}

	location /cgi-bin/forms/ {
		limit_except DENY; # No method allowed 
	}

	location /static/ {
		autoindex on;
		limit_except GET;
	}
	
	location /redirection1/ {
        return http://127.0.0.1:8080/;
    }
	location /redirection2/ {
        return http://127.0.0.1:8081/;
    }
	location /redirection3/ {
        return http://127.0.0.1:8082/;
    }

	# here to show 403 errors, try to chmod 000 secretfile inside the folder
	location /forbiddenFolder/ {
		autoindex off;
	}
	
	location /kapouet/ {
		root app/website/tmp/www/;
    }

}

#Server used to show that redirections work and can change the server address
server {
	listen 127.0.0.1:8081;
	server_name redirhost;
	root app/website/;

	location / {
		root app/website/;
		index static/redirect.html;
	}
	location /redirection1/ {
        return http://127.0.0.1:8080/;
    }
	location /redirection2/ {
        return http://127.0.0.1:8081/;
    }
	location /redirection3/ {
        return http://127.0.0.1:8082/;
    }

}


# Minimal informations to give to a server 
#		redirections will not work 
#		there is no index page, no uploads possible, no redir, no exec CGI (try to exec a script will result to serve the file) ...
#		but GET POST DELETE will work everywhere 
server {
	listen 127.0.0.1:8082;
	root app/website/;
}

